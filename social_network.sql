-- MySQL Script generated by MySQL Workbench
-- Tue May 30 07:51:57 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema social_network
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema social_network
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `social_network` DEFAULT CHARACTER SET utf8 ;
USE `social_network` ;

-- -----------------------------------------------------
-- Table `social_network`.`Profile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`Profile` (
  `profile_id` INT NOT NULL,
  `full_name` VARCHAR(45) NOT NULL,
  `dater_of_birth` DATETIME NULL,
  `gender` VARCHAR(45) NULL,
  `bio` VARCHAR(45) NULL,
  PRIMARY KEY (`profile_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`User` (
  `user_id` INT NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `pasword` VARCHAR(45) NOT NULL,
  `registration_date` DATETIME NOT NULL,
  `profile_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `profile_id`),
  INDEX `fk_User_Profile_idx` (`profile_id` ASC) VISIBLE,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  CONSTRAINT `fk_User_Profile`
    FOREIGN KEY (`profile_id`)
    REFERENCES `social_network`.`Profile` (`profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`Friendship`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`Friendship` (
  `friendship_id` INT NOT NULL,
  `friend_profile_id` INT NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`friendship_id`, `friend_profile_id`),
  INDEX `friend_profile_id_idx` (`friend_profile_id` ASC) VISIBLE,
  CONSTRAINT `friend_profile_id`
    FOREIGN KEY (`friend_profile_id`)
    REFERENCES `social_network`.`Profile` (`profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`Friendship_has_Profile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`Friendship_has_Profile` (
  `Friendship_friendship_id` INT NOT NULL,
  `Profile_profile_id` INT NOT NULL,
  PRIMARY KEY (`Friendship_friendship_id`, `Profile_profile_id`),
  INDEX `fk_Friendship_has_Profile_Profile1_idx` (`Profile_profile_id` ASC) VISIBLE,
  INDEX `fk_Friendship_has_Profile_Friendship1_idx` (`Friendship_friendship_id` ASC) VISIBLE,
  CONSTRAINT `fk_Friendship_has_Profile_Friendship1`
    FOREIGN KEY (`Friendship_friendship_id`)
    REFERENCES `social_network`.`Friendship` (`friendship_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Friendship_has_Profile_Profile1`
    FOREIGN KEY (`Profile_profile_id`)
    REFERENCES `social_network`.`Profile` (`profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`Profile_has_Friendship`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`Profile_has_Friendship` (
  `profile_id` INT NOT NULL,
  `friendship_id` INT NOT NULL,
  PRIMARY KEY (`profile_id`, `friendship_id`),
  INDEX `fk_Profile_has_Friendship1_Friendship1_idx` (`friendship_id` ASC) VISIBLE,
  INDEX `fk_Profile_has_Friendship1_Profile1_idx` (`profile_id` ASC) VISIBLE,
  CONSTRAINT `fk_Profile_has_Friendship1_Profile1`
    FOREIGN KEY (`profile_id`)
    REFERENCES `social_network`.`Profile` (`profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Profile_has_Friendship1_Friendship1`
    FOREIGN KEY (`friendship_id`)
    REFERENCES `social_network`.`Friendship` (`friendship_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`Photo_Album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`Photo_Album` (
  `photo_album_id` INT NOT NULL,
  `profile_id` INT NOT NULL,
  `photo_album_name` VARCHAR(45) NULL,
  `date_created` DATETIME NULL,
  PRIMARY KEY (`photo_album_id`, `profile_id`),
  INDEX `fk_Photo_Album_Profile1_idx` (`profile_id` ASC) VISIBLE,
  CONSTRAINT `fk_Photo_Album_Profile1`
    FOREIGN KEY (`profile_id`)
    REFERENCES `social_network`.`Profile` (`profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`Photo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`Photo` (
  `photo_id` INT NOT NULL,
  `photo_album_id` INT NOT NULL,
  `profile_id` INT NOT NULL,
  `content` BLOB NULL,
  `caption` VARCHAR(45) NULL,
  `upload_date` DATETIME NULL,
  PRIMARY KEY (`photo_id`, `photo_album_id`, `profile_id`),
  INDEX `fk_Photo_Photo_Album1_idx` (`photo_album_id` ASC, `profile_id` ASC) VISIBLE,
  CONSTRAINT `fk_Photo_Photo_Album1`
    FOREIGN KEY (`photo_album_id` , `profile_id`)
    REFERENCES `social_network`.`Photo_Album` (`photo_album_id` , `profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`Post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`Post` (
  `post_id` INT NOT NULL,
  `date_created` DATETIME NOT NULL,
  `profile_id` INT NOT NULL,
  `content` VARCHAR(45) NOT NULL,
  `photo_id` INT NULL,
  PRIMARY KEY (`post_id`, `profile_id`),
  INDEX `fk_Post_Profile1_idx` (`profile_id` ASC) VISIBLE,
  INDEX `photo_content_id_idx` (`photo_id` ASC) VISIBLE,
  CONSTRAINT `fk_Post_Profile1`
    FOREIGN KEY (`profile_id`)
    REFERENCES `social_network`.`Profile` (`profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `photo_content_id`
    FOREIGN KEY (`photo_id`)
    REFERENCES `social_network`.`Photo` (`photo_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`Comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`Comment` (
  `comment_id` INT NOT NULL,
  `post_id` INT NOT NULL,
  `author_profile_id` INT NOT NULL,
  `content` VARCHAR(45) NOT NULL,
  `date_created` DATETIME NOT NULL,
  PRIMARY KEY (`comment_id`, `post_id`, `author_profile_id`),
  INDEX `fk_Comment_Post1_idx` (`post_id` ASC) VISIBLE,
  INDEX `author_profile_id_idx` (`author_profile_id` ASC) VISIBLE,
  CONSTRAINT `fk_Comment_Post1`
    FOREIGN KEY (`post_id`)
    REFERENCES `social_network`.`Post` (`post_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `author_profile_id`
    FOREIGN KEY (`author_profile_id`)
    REFERENCES `social_network`.`Profile` (`profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`Like`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`Like` (
  `like_id` INT NOT NULL,
  `post_id` INT NOT NULL,
  `profile_id` INT NOT NULL,
  PRIMARY KEY (`like_id`, `post_id`, `profile_id`),
  INDEX `fk_Like_Post1_idx` (`post_id` ASC) VISIBLE,
  INDEX `profile_id_idx` (`profile_id` ASC) VISIBLE,
  CONSTRAINT `fk_Like_Post1`
    FOREIGN KEY (`post_id`)
    REFERENCES `social_network`.`Post` (`post_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `profile_id`
    FOREIGN KEY (`profile_id`)
    REFERENCES `social_network`.`Profile` (`profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`Group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`Group` (
  `group_id` INT NOT NULL,
  `group_name` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`group_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`Group_Membership`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`Group_Membership` (
  `membership_id` INT NOT NULL,
  `profile_id` INT NOT NULL,
  `role` VARCHAR(45) NULL,
  `group_id` INT NOT NULL,
  PRIMARY KEY (`membership_id`, `group_id`, `profile_id`),
  INDEX `profile_id_idx` (`profile_id` ASC) VISIBLE,
  INDEX `fk_Group_Membership_Group1_idx` (`group_id` ASC) VISIBLE,
  CONSTRAINT `profile_id`
    FOREIGN KEY (`profile_id`)
    REFERENCES `social_network`.`Profile` (`profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Group_Membership_Group1`
    FOREIGN KEY (`group_id`)
    REFERENCES `social_network`.`Group` (`group_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`Message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`Message` (
  `message_id` INT NOT NULL,
  `receiver_profile_id` INT NOT NULL,
  `content` VARCHAR(45) NULL,
  `date_sent` DATETIME NULL,
  PRIMARY KEY (`message_id`, `receiver_profile_id`),
  INDEX `receiver_profil_id_idx` (`receiver_profile_id` ASC) VISIBLE,
  CONSTRAINT `receiver_profil_id`
    FOREIGN KEY (`receiver_profile_id`)
    REFERENCES `social_network`.`Profile` (`profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`Profile_has_Message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`Profile_has_Message` (
  `profile_id` INT NOT NULL,
  `message_id` INT NOT NULL,
  PRIMARY KEY (`profile_id`, `message_id`),
  INDEX `fk_Profile_has_Message_Message1_idx` (`message_id` ASC) VISIBLE,
  INDEX `fk_Profile_has_Message_Profile1_idx` (`profile_id` ASC) VISIBLE,
  CONSTRAINT `fk_Profile_has_Message_Profile1`
    FOREIGN KEY (`profile_id`)
    REFERENCES `social_network`.`Profile` (`profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Profile_has_Message_Message1`
    FOREIGN KEY (`message_id`)
    REFERENCES `social_network`.`Message` (`message_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`Profile_Tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`Profile_Tag` (
  `tag_id` INT NOT NULL,
  `tagged_profile_id` INT NOT NULL,
  PRIMARY KEY (`tag_id`, `tagged_profile_id`),
  INDEX `tagged_profile_id_idx` (`tagged_profile_id` ASC) VISIBLE,
  CONSTRAINT `tagged_profile_id`
    FOREIGN KEY (`tagged_profile_id`)
    REFERENCES `social_network`.`Profile` (`profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
